---
import GitHub from "./icons/GitHub.astro"
import NextJS from "./icons/NextJS.astro"
import Tailwind from "./icons/Tailwind.astro"
import Link from "./icons/Link.astro"
import LinkButton from "./LinkButton.astro"
import Javascript from "./icons/javascript.astro"
import Html from "./icons/html.astro"
import CSS from "./icons/CSS1.astro"
import Python from "./icons/python.astro"

const TAGS = {
  NEXT: {
    name: "Next.js",
    class: "bg-black text-white",
    icon: NextJS,
  },
  TAILWIND: {
    name: "Tailwind CSS",
    class: "bg-[#003159] text-white",
    icon: Tailwind,
  },
  JAVASCRIPT: {
    name: "JavaScript",
    class: "bg-lightyellow text-white",
    icon: Javascript,
  },
  HTML: {
    name: "HTML",
    class: "bg-lightorange text-white",
    icon: Html,
  },
  CSS: {
    name:"CSS",
    class: "bg-lightblue text-white",
    icon: CSS,
  },
  PYTHON: {
    name: "Python",
    class: "bg-lightyellow text-white",
    icon: Python,
  },
  STREAMLIT: {
    name: "Streamlit Python UI",
    class: "text-white",
    icon: Python,
  },
  PANDAS: {
    name: "Pandas Python library",
    class: "text-white",
    icon: Python,
  },
  PLOTLY: {
    name: "Plotly Python library",
    class: "text-white",
    icon: Python
  }
}
const PROJECTS = [
  {
  title: "Simple Finance App - Dashboard interactivo de finanzas personales",
  description:
    "Una aplicación de finanzas personales construida con Streamlit, que permite cargar y categorizar transacciones financieras desde un archivo CSV. Incluye gráficos interactivos y una tabla para analizar los ingresos y gastos por categoría.",
  link: "https://simple-finance-app-hc6syfp5bvtukaczeztxdi.streamlit.app/", 
  github: "https://github.com/Sebastian-hass/simple-finance-app.git", 
  image: "/projects/finance_app.png",
  tags: [TAGS.PYTHON, TAGS.STREAMLIT, TAGS.PANDAS, TAGS.PLOTLY]
  },
  {
    title: "Crazy scroll - Una página web con una animación de scroll realista",
    description :
      "Una página web hecha solo con html y javascript. Sin frameworks ni librerías. Con animación realista de scroll diseño minimilaista.",
    link: "https://sebastian-hass.github.io/Scrollanimation/",
    github: "https://github.com/Sebastian-hass/Scrollanimation.git",
    image: "/projects/crazy_scroll.png",
    tags: [TAGS.JAVASCRIPT, TAGS.HTML],
  },
  {
    title: "Django REST API - BlogPosts",
    description:
    "Una API RESTful construida con Django y Django REST Framework que permite gestionar publicaciones de blog (CRUD). Incluye serialización, vistas genéricas y despliegue en Render con configuración optimizada para producción.",
    link: "https://django-api-nqex.onrender.com/blogposts/",
    github: "https://github.com/Sebastian-hass/Django_API.git",
    image: "/projects/Django-API.png",
    tags: [TAGS.PYTHON, TAGS.JAVASCRIPT, TAGS.CSS],
  },
  {
    title: "Frontend website - un sitio web frontend con html, css y js para un agente inmobiliario",
    description:
      "Un sitio web frontend con html, css y js para un agente inmobiliario. Diseño minimalista y moderno.",
    link: "https://sebastian-hass.github.io/Web-Agente-inmobiliario/",
    github: "https://github.com/Sebastian-hass/Web-Agente-inmobiliario.git",
    image: "/projects/agente_inmo.png",
    tags: [TAGS.JAVASCRIPT, TAGS.HTML, TAGS.CSS],
  },
  

]
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
    <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
  <div class="w-full md:w-1/2">
    <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
      <img alt="Recién llegado vs 5 años en Nueva Zelanda" class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105" loading="lazy" src={image} />
    </div>
  </div>

  <div class="w-full md:w-1/2 md:max-w-lg">
    <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
      {title}
    </h3>
    <div class="flex flex-wrap mt-2">
      <ul class="flex flex-row mb-2 gap-x-2">
          {tags.map((tag) => (
            <li>
              <span
                class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            </li>
          ))}
        </ul>

      <div class="mt-2 text-gray-700 dark:text-gray-400">{description}</div>
      <footer class="flex items-end justify-start mt-4 gap-x-4">
          {github && (
            <LinkButton href={github}>
              <GitHub class="size-6" />
              Code
              
            </LinkButton>
          )}
          {link && (
            <LinkButton href={link}>
              <Link class="size-4" />
              Preview
            </LinkButton>
          )}
        </footer>
    </div>
  </div>
</article>
    ))
  }
</div>



